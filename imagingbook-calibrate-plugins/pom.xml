<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<!-- Note: Name contains underscores such that the output JAR 
	is compatible with the standard naming scheme for ImageJ plugins 
	(see https://imagej.nih.gov/ij/plugins/jar-demo.html). -->
	<artifactId>imagingbook_calibrate_plugins</artifactId>
	<packaging>jar</packaging>
	
	<parent>
		<groupId>com.imagingbook</groupId>
		<artifactId>imagingbook-calibrate</artifactId>
		<version>4.0A-SNAPSHOT</version>
	</parent>
	
	<properties>
		<imagingbook.rootdir>${directory-up-2}</imagingbook.rootdir>
	</properties>

	<dependencies>
	
		<dependency>
			<groupId>com.imagingbook</groupId>
			<artifactId>imagingbook-calibrate-lib</artifactId>
			<version>4.0A-SNAPSHOT</version>
		</dependency>
		
		<dependency>
			<groupId>com.imagingbook</groupId>
			<artifactId>imagingbook-calibrate-data</artifactId>
			<version>4.0A-SNAPSHOT</version>
		</dependency>
		
	</dependencies>
	
	<build>
   		<!-- needed for updating Eclipse settings (see also ij-plugins-build profile) -->
    	<outputDirectory>ImageJ/plugins</outputDirectory>
   
		<plugins>
			<!-- empty the ImageJ/plugins and ImageJ/jars directories at clean -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<!-- avoid removing the cleaned directories themselves, delete content only: -->
					<excludeDefaultDirectories>true</excludeDefaultDirectories>
					<filesets>
						<!-- clean ImageJ/jars/  -->
						<fileset>
							<directory>${project.basedir}/ImageJ/jars</directory>
							<includes>
								<include>**/*</include>
							</includes>
						</fileset>
						<!-- also clean the output directory (needed?) -->
						<fileset>
							<directory>${project.basedir}/ImageJ/plugins</directory>
							<!-- <directory>${outputDirectory}</directory> -->
							 <!-- <includes> -->
								<!-- <include>**/*</include> -->
								<!-- <include>**/*.jar</include> -->
							<!-- </includes> -->
							<excludes>
								<exclude>.gitignore</exclude>
							</excludes>
						</fileset>
						<!-- because excludeDefaultDirectories=true, target doesn't get cleaned by default -->
						<fileset>
							<directory>${project.basedir}/target</directory>
							<includes>
								<include>**/*</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>


			<!-- Copy dependencies into different places of ImageJ project: 
				see https://maven.apache.org/plugins/maven-dependency-plugin/examples/copying-artifacts.html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<!-- copy ij.jar into ImageJ/ -->
						<id>copy-ij-jar</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>net.imagej</groupId>
									<artifactId>ij</artifactId>
									<outputDirectory>${project.basedir}/ImageJ</outputDirectory>
									<destFileName>ij.jar</destFileName>
								</artifactItem>
							</artifactItems>
							<overWriteIfNewer>true</overWriteIfNewer>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
					
					<!-- copy all imagingbook plugins into ImageJ/plugins/ -->
					<!-- <execution>
						<id>copy-imagingbook-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeGroupIds>com.imagingbook</includeGroupIds>
							<excludeArtifactIds>imagingbook-common,imagingbook-core</excludeArtifactIds>
							<outputDirectory>${project.basedir}/ImageJ/plugins</outputDirectory>
							<overWriteIfNewer>true</overWriteIfNewer>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution> -->
					
					<!-- copy only imagingbook-common into ImageJ/jars/ -->
					<!-- <execution>	
						<id>copy-imagingbook-common</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeGroupIds>com.imagingbook</includeGroupIds>
							<includeArtifactIds>imagingbook-core,imagingbook-common</includeArtifactIds>
							<outputDirectory>${project.basedir}/ImageJ/jars</outputDirectory>
							<overWriteIfNewer>true</overWriteIfNewer>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution> -->

					<execution>
						<!-- copy all other dependencies into ImageJ/jars/ -->
						<id>copy-other-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeGroupIds>net.imagej</excludeGroupIds>
							<!-- <excludeGroupIds>com.imagingbook,net.imagej</excludeGroupIds> -->
							<excludeArtifactIds>ij</excludeArtifactIds>
							<outputDirectory>${project.basedir}/ImageJ/jars</outputDirectory>
							<overWriteIfNewer>true</overWriteIfNewer>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>

				</executions>
			</plugin>
			<!-- end of copy -->
			
			<!-- Run Java program to build plugins.config file in output directory (to be included in output JAR) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>codegeneration</id>
						<!-- <phase>generate-resources</phase>  -->
						<!-- <phase>process-classes</phase>  -->
						<phase>prepare-package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>imagingbook.pluginutils.PluginsConfigBuilder</mainClass>
							<arguments>
								<argument>${project.build.outputDirectory}</argument>
								<argument>${project.name}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
		
		<resources>
			<!-- add plugins.config to the project's JAR -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/${pluginConfigFile}</include>
				</includes>
			</resource>
		</resources>
	</build>

</project>